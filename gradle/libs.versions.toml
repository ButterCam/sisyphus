[versions]
protobuf = "3.22.2"
grpc = "1.53.0"
grpc-kotlin = "1.3.0"
grpc-rxjava = "1.2.3"
kotlin = "1.8.10"
kotlinx-coroutines = "1.6.4"
junit-platform = "1.9.2"
junit-jupiter = "5.9.2"
spring-boot = "2.7.9"
spring-framework = "5.3.13"
spring-rabbit = "2.4.10"
jackson = "2.14.2"
mysql = "8.0.32"
logback = "1.2.6"
postgresql = "42.5.4"
nebula-contacts = "7.0.0"
nebula-info = "12.0.1"
nebula-publishing = "20.1.0"
gradle-docker = "8.1.0"
okhttp = "4.10.0"
retrofit = "2.9.0"
kotlinpoet = "1.12.0"
resilience4j = "1.7.1"
antlr4 = "4.10.1"
maven = "3.9.0"
maven-resolver = "1.9.4"
maven-wagon = "3.5.3"
jgit = "6.4.0.202211300538-r"
jooq = "3.17.8"
mongodb = "4.9.0"
reflections = "0.10.2"
ktlint = "11.3.1"
sisyphus-project-plugin = "1.7.1"
sisyphus-protobuf-plugin = "1.7.0"
plugin-publishing = "1.1.0"
google-commonProtos = "2.14.2"
google-apiCommon = "2.6.2"
rxjava = "2.2.21"
gson = "2.9.1"
elastic = "8.7.0"
kubernetes = "18.0.0"
hbase = "2.8.7"
hikari = "5.0.1"
h2 = "2.1.214"
rocketmq = "4.7.1"
swagger = "2.2.8"

[libraries]
protobuf-bom = { module = "com.google.protobuf:protobuf-bom", version.ref = "protobuf" }
protobuf-java = { module = "com.google.protobuf:protobuf-java", version.ref = "protobuf" }

grpc-bom = { module = "io.grpc:grpc-bom", version.ref = "grpc" }
grpc-netty = { module = "io.grpc:grpc-netty", version.ref = "grpc" }
grpc-api = { module = "io.grpc:grpc-api", version.ref = "grpc" }
grpc-core = { module = "io.grpc:grpc-core", version.ref = "grpc" }
grpc-stub = { module = "io.grpc:grpc-stub", version.ref = "grpc" }
grpc-kotlin = { module = "io.grpc:grpc-kotlin-stub", version.ref = "grpc-kotlin" }
grpc-rxjava = { module = "com.salesforce.servicelibs:rxgrpc-stub", version.ref = "grpc-rxjava" }

mysql-connector = { module = "com.mysql:mysql-connector-j", version.ref = "mysql" }
postgresql-connector = { module = "org.postgresql:postgresql", version.ref = "postgresql" }

nebula-info = { module = "com.netflix.nebula:gradle-info-plugin", version.ref = "nebula-info" }
nebula-publishing = { module = "com.netflix.nebula:nebula-publishing-plugin", version.ref = "nebula-publishing" }
nebula-contacts = { module = "com.netflix.nebula:gradle-contacts-plugin", version.ref = "nebula-contacts" }

gradle-docker = { module = "com.bmuschko:gradle-docker-plugin", version.ref = "gradle-docker" }
gradle-sisyphus = { module = "com.bybutter.sisyphus.tools:sisyphus-project-gradle-plugin", version.ref = "sisyphus-project-plugin" }
gradle-sisyphus-protobuf = { module = "com.bybutter.sisyphus.tools:sisyphus-protobuf-gradle-plugin", version.ref = "sisyphus-protobuf-plugin" }
gradle-spring = { module = "org.springframework.boot:spring-boot-gradle-plugin", version.ref = "spring-boot" }
gradle-ktlint = { module = "org.jlleitschuh.gradle:ktlint-gradle", version.ref = "ktlint" }
gradle-kotlin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
gradle-kotlin-allopen = { module = "org.jetbrains.kotlin:kotlin-allopen", version.ref = "kotlin" }
gradle-plugin-publish = { module = "com.gradle.publish:plugin-publish-plugin", version.ref = "plugin-publishing" }

spring-boot = { module = "org.springframework.boot:spring-boot-starter", version.ref = "spring-boot" }
spring-boot-test = { module = "org.springframework.boot:spring-boot-starter-test", version.ref = "spring-boot" }
spring-boot-redis = { module = "org.springframework.boot:spring-boot-starter-data-redis", version.ref = "spring-boot" }
spring-boot-actuator = { module = "org.springframework.boot:spring-boot-starter-actuator", version.ref = "spring-boot" }
spring-boot-json = { module = "org.springframework.boot:spring-boot-starter-json", version.ref = "spring-boot" }
spring-boot-webflux = { module = "org.springframework.boot:spring-boot-starter-webflux", version.ref = "spring-boot" }
spring-framework-amqp = { module = "org.springframework.amqp:spring-rabbit", version.ref = "spring-rabbit" }

antlr4-runtime = { module = "org.antlr:antlr4-runtime", version.ref = "antlr4" }
antlr4 = { module = "org.antlr:antlr4", version.ref = "antlr4" }

kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }
kotlin-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlin-coroutines-jdk = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-jdk8", version.ref = "kotlinx-coroutines" }
kotlin-coroutines-reactive = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-reactive", version.ref = "kotlinx-coroutines" }

junit-jupiter = { module = "org.junit.jupiter:junit-jupiter", version.ref = "junit-jupiter" }
junit-jupiter-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junit-jupiter" }
junit-jupiter-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit-jupiter" }
junit-launcher = { module = "org.junit.platform:junit-platform-launcher", version.ref = "junit-platform" }

google-commonProtos = { module = "com.google.api.grpc:proto-google-common-protos", version.ref = "google-commonProtos" }
google-apiCommon = { module = "com.google.api:api-common", version.ref = "google-apiCommon" }

rxjava = { module = "io.reactivex.rxjava2:rxjava", version.ref = "rxjava" }

gson = { module = "com.google.code.gson:gson", version.ref = "gson" }

jackson = { module = "com.fasterxml.jackson.core:jackson-core", version.ref = "jackson" }
jackson-kotlin = { module = "com.fasterxml.jackson.module:jackson-module-kotlin", version.ref = "jackson" }
jackson-yaml = { module = "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml", version.ref = "jackson" }
jackson-properties = { module = "com.fasterxml.jackson.dataformat:jackson-dataformat-properties", version.ref = "jackson" }
jackson-smile = { module = "com.fasterxml.jackson.dataformat:jackson-dataformat-smile", version.ref = "jackson" }
jackson-cbor = { module = "com.fasterxml.jackson.dataformat:jackson-dataformat-cbor", version.ref = "jackson" }

reflections = { module = "org.reflections:reflections", version.ref = "reflections" }

maven-resolver = { module = "org.apache.maven:maven-resolver-provider", version.ref = "maven" }
maven-resolver-connector = { module = "org.apache.maven.resolver:maven-resolver-connector-basic", version.ref = "maven-resolver" }
maven-resolver-wagon = { module = "org.apache.maven.resolver:maven-resolver-transport-wagon", version.ref = "maven-resolver" }
maven-wagon-file = { module = "org.apache.maven.wagon:wagon-file", version.ref = "maven-wagon" }
maven-wagon-http = { module = "org.apache.maven.wagon:wagon-http", version.ref = "maven-wagon" }

elastic-rest = { module = "org.elasticsearch.client:elasticsearch-rest-client", version.ref = "elastic" }

kubernetes = { module = "io.kubernetes:client-java", version.ref = "kubernetes" }

hbase = { module = "com.aliyun.hbase:alihbase-client", version.ref = "hbase" }

hikari = { module = "com.zaxxer:HikariCP", version.ref = "hikari" }

h2 = { module = "com.h2database:h2", version.ref = "h2" }

mongodb = { module = "org.mongodb:mongodb-driver-reactivestreams", version.ref = "mongodb" }

jooq = { module = "org.jooq:jooq", version.ref = "jooq" }

retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }

okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }

resilience4j-retrofit = { module = "io.github.resilience4j:resilience4j-retrofit", version.ref = "resilience4j" }
resilience4j-circuitbreaker = { module = "io.github.resilience4j:resilience4j-circuitbreaker", version.ref = "resilience4j" }

rocketmq = { module = "org.apache.rocketmq:rocketmq-client", version.ref = "rocketmq" }
rocketmq-acl = { module = "org.apache.rocketmq:rocketmq-acl", version.ref = "rocketmq" }

swagger = { module = "io.swagger.core.v3:swagger-core", version.ref = "swagger" }

kotlinpoet = { module = "com.squareup:kotlinpoet", version.ref = "kotlinpoet" }

[plugins]
nebula-maven = { id = "com.netflix.nebula.maven-publish" }
nebula-contacts = { id = "com.netflix.nebula.contacts" }
sisyphus-project = { id = "com.bybutter.sisyphus.project"}
